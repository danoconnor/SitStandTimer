<Frame
    x:Class="SitStandTimer.AppFrame"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SitStandTimer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Frame.Resources>
        <Style x:Key="HamburgerButtonStyle" TargetType="Button" BasedOn="{StaticResource NoBordersButtonStyle}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="50" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
    </Frame.Resources>

    <Frame.Style>
        <Style TargetType="Frame">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <SplitView x:Name="AppFrameSplitView" IsPaneOpen="False" DisplayMode="CompactOverlay">
                            <SplitView.Pane>
                                <StackPanel Background="{ThemeResource SystemAltLowColor}">

                                    <!-- Hamburger button -->
                                    <Button Click="ToggleHamburgerMenu" Width="50" Height="50" Style="{StaticResource NoBordersButtonStyle}">
                                        <FontIcon FontSize="20" Glyph="&#xE700;" />
                                    </Button>

                                    <!-- Home button -->
                                    <!-- 
                                        TODO: the button content here should probably be put in a template. But then we lose all the nice default
                                        button visual state styling (hover, pressed, etc) and would have to re-create that manually.
                                     -->
                                    <Button Click="NavToMainPage" Style="{StaticResource HamburgerButtonStyle}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <FontIcon FontSize="20" Glyph="&#xE10F;" Grid.Column="0" HorizontalAlignment="Center" />
                                            <TextBlock Text="Home" VerticalAlignment="Center" Grid.Column="1" />
                                        </Grid>
                                    </Button>

                                    <!-- Configuration button -->
                                    <!-- 
                                        TODO: the button content here should probably be put in a template. But then we lose all the nice default
                                        button visual state styling (hover, pressed, etc) and would have to re-create that manually.
                                     -->
                                    <Button Click="NavToConfigurationPage" Style="{StaticResource HamburgerButtonStyle}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <FontIcon FontSize="20" Glyph="&#xE115;" Grid.Column="0" HorizontalAlignment="Center" />
                                            <TextBlock Text="Configure schedule" VerticalAlignment="Center" Grid.Column="1" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </SplitView.Pane>

                            <ContentPresenter />
                        </SplitView>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Frame.Style>
</Frame>
